(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{501:function(a,s,t){"use strict";t.r(s);var e=t(6),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"integrar-tailwind-css-en-angular-y-combinarlo-con-material"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#integrar-tailwind-css-en-angular-y-combinarlo-con-material"}},[a._v("#")]),a._v(" Integrar Tailwind CSS en Angular y combinarlo con Material")]),a._v(" "),t("social-share",{staticClass:"social-share--header"}),a._v(" "),t("p",[a._v("Si todavía no sabes qué es Tailwind CSS, te recomiendo que le eches un vistazo a mi artículo sobre "),t("RouterLink",{attrs:{to:"/blog/tailwind-css/"}},[a._v("¿Qué es Tailwind CSS?")]),a._v(". Y si no conoces Material Design o Angular Material, también te sugiero que le eches un vistazo a este otro artículo sobre "),t("RouterLink",{attrs:{to:"/blog/por-que-usar-angular-material-design/"}},[a._v("¿Por qué usar Angular y Material Design?")]),a._v(" y donde planteo algunas de las ventajas de su uso.")],1),a._v(" "),t("h2",{attrs:{id:"instalacion-de-tailwind-css-en-angular"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instalacion-de-tailwind-css-en-angular"}},[a._v("#")]),a._v(" Instalación de Tailwind CSS en Angular")]),a._v(" "),t("p",[a._v("Desde la versión 11.2 de Angular "),t("strong",[a._v("ya está disponible el soporte nativo de Tailwind CSS")]),a._v(", así que es muy sencillo empezar a disfrutar de sus ventajas en nuestras aplicaciones:")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("En primer lugar debemos asegurarnos de estar en la versión 11.2 o superior de Angular. Podemos actualizarnos ejecutando "),t("code",[a._v("ng update")]),a._v(" o siguiendo la "),t("a",{attrs:{href:"https://update.angular.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("guía de actualización de Angular"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Si ejecutamos el comando "),t("code",[a._v("ng update")]),a._v(", es posible que tengamos alertas que nos indiquen que debemos ejecutar por separado la actualización de Angular CLI con "),t("code",[a._v("ng update @angular/cli")]),a._v(" y Angular Core con "),t("code",[a._v("ng update @angular/core")]),a._v(".")]),a._v(" "),t("blockquote",[t("p",[a._v("Tengamos en cuenta que desde la versión 7 de Angular, las versiones principales de Angular Core y CLI están alineadas, por lo que ambas tienen que ser iguales si queremos usar Angular CLI para desarrollar nuestra aplicación.")])])]),a._v(" "),t("li",[t("p",[a._v("Si simplemente queremos la versión intermedia más reciente de Angular 11, debemos ejecutar "),t("code",[a._v("ng update @angular/cli@11")]),a._v(" y "),t("code",[a._v("ng update @angular/core@11")]),a._v(", o lo que sería lo mismo "),t("code",[a._v("ng update @angular/core@11 @angular/cli@11")]),a._v(".")]),a._v(" "),t("blockquote",[t("p",[a._v("Recordemos que las versiones intermedias son totalmente compatibles con las versiones intermedias anteriores por lo que no deberíamos de tener problemas al pasarnos por ejemplo de la versión 11.0.0 a la 11.2.4.")])])])])]),a._v(" "),t("li",[t("p",[a._v("A continuación instalamos Tailwind CSS con el comando "),t("code",[a._v("npm install -D tailwindcss")]),a._v(".")])]),a._v(" "),t("li",[t("p",[a._v("Creamos el fichero de configuración de Tailwind CSS "),t("em",[a._v("tailwind.config.js")]),a._v(" en la carpeta raíz de nuestra aplicación con el comando "),t("code",[a._v("npx tailwindcss init")]),a._v(".")])]),a._v(" "),t("li",[t("p",[a._v("Configuramos Tailwind CSS para que elimine los estilos no utilizados en nuestra aplicación:")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  purge"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    enabled"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    content"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./src/**/*.{html,ts}'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("tailwind.config.js")])])]),a._v(" "),t("li",[t("p",[a._v("Y finalmente importamos los estilos base a nuestro fichero "),t("em",[a._v("styles.scss")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-scss extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("@import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'tailwindcss/base'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("@import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'tailwindcss/components'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("@import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'tailwindcss/utilities'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])]),a._v(" "),t("p",[a._v("A partir de ese momento ya podemos empezar a usar Tailwind CSS en nuestra aplicación:")]),a._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("button")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("Button"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("button")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[t("em",[a._v("app.component.html")])]),a._v(" "),t("h2",{attrs:{id:"instalacion-de-angular-material"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instalacion-de-angular-material"}},[a._v("#")]),a._v(" Instalación de Angular Material")]),a._v(" "),t("p",[a._v("La instalación de Angular Material está completamente guiada a través de Angular CLI, por lo que al ejecutar el comando "),t("code",[a._v("ng add @angular/material")]),a._v(" en nuestra aplicación, podremos instalar todo lo necesario.")]),a._v(" "),t("p",[a._v("A continuación debemos importar los módulos de los componentes que queramos usar en nuestra aplicación:")]),a._v(" "),t("div",{staticClass:"language-ts extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" MatSliderModule "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'@angular/material/slider'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" MatButtonModule "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'@angular/material/button'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n…\n@"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("NgModule")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n  imports"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  MatSliderModule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  MatButtonModule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n…"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("Y así poder empezar a usarlos en nuestros componentes:")]),a._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("mat-slider")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("min")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("max")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("100"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("step")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("mat-slider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("button")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("mat-button")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("Basic"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("button")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[t("em",[a._v("app.component.html")])]),a._v(" "),t("h2",{attrs:{id:"incompatibilidades-entre-tailwind-css-y-angular-material"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#incompatibilidades-entre-tailwind-css-y-angular-material"}},[a._v("#")]),a._v(" Incompatibilidades entre Tailwind CSS y Angular Material")]),a._v(" "),t("p",[a._v("Una vez tengamos los dos sistemas de diseño en una misma aplicación, podremos encontrarnos con que determinados estilos de ambos sistemas se vean afectados el uno por el otro.")]),a._v(" "),t("p",[a._v("En el caso de que queramos dar prioridad a los estilos de Tailwind CSS, tenemos la posibilidad de establecer que las propiedades de sus clases tengan preferencia mediante el siguiente ajuste en el fichero "),t("em",[a._v("tailwind.config.js")]),a._v(" creado en la carpeta raíz de nuestra aplicación:")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  important"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("tailwind.config.js")])]),a._v(" "),t("p",[a._v("Si por el contrario lo que queremos es priorizar las clases de Angular Material, debemos reescribir los estilos de Tailwind CSS que no queramos que nos afecten o inclusive usar sus propias clases para "),t("em",[a._v("proteger")]),a._v(" los estilos de los componentes de Angular Material.")]),a._v(" "),t("p",[a._v("Esto nos puede ocurrir por ejemplo con los botones, donde la clase base de Tailwind CSS siempre les agregará un contorno cuando reciban el foco:")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("button:focus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("outline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 1px dotted"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("outline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 5px auto -webkit-focus-ring-color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Así que podremos reescribir dicho estilo en nuestro fichero "),t("em",[a._v("styles.scss")]),a._v(" estableciendo el valor deseado:")]),a._v(" "),t("div",{staticClass:"language-scss extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("button:focus ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("outline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("styles.scss")])]),a._v(" "),t("p",[a._v("O inclusive usando una clase predefinida de Tailwind:")]),a._v(" "),t("div",{staticClass:"language-scss extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("button:focus ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  @apply outline-none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("styles.scss")])]),a._v(" "),t("p",[a._v("También cabría la posibilidad de usar una clase propia de Tailwind CSS en nuestro control para evitar dicho efecto en nuestro botón de Angular Material:")]),a._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("button")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("mat-button")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("focus:outline-none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("Basic"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("button")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("Y para terminar, la que quizás sea la vía más interesante para evitar los problemas de compatibilidad entre ambos sistemas (y seguramente la más acertada para proyectos ya existentes o de los cuales queremos controlar las clases base), es deshabilitar por completo los estilos "),t("em",[a._v("preflight")]),a._v(" (son los estilos creados para suavizar las inconsistencias entre navegadores) de Tailwind CSS con la siguiente modificación en el fichero "),t("em",[a._v("tailwind.config.js")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  corePlugins"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    preflight"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("tailwind.config.js")])]),a._v(" "),t("hr"),a._v(" "),t("social-share",{staticClass:"social-share--footer"})],1)}),[],!1,null,null,null);s.default=n.exports}}]);